{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/pages/imprint.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["MDXRenderer","require","module","exports","StyledSection","styled","section","withConfig","displayName","componentId","_ref","theme","colors","background","StyledContentWrapper","ContentWrapper","Imprint","_ref2","_data$imprint$edges$","data","imprint","edges","node","body","frontmatter","title","seoTitle","useSeoTitleSuffix","globalState","isIntroDone","useSplashScreen","darkMode","React","createElement","GlobalStateProvider","initialState","Layout","SEO","concat","seoTitleSuffix","meta","name","content","id","data-testid","propTypes","PropTypes","shape","arrayOf","string","isRequired","object","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","Object","values","map","key","Function","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","bind","arguments"],"mappings":"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","file":"component---src-pages-imprint-js-61053c0e684e1e50c4cc.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport GlobalStateProvider from \"../context/provider\"\nimport ContentWrapper from \"../styles/contentWrapper\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { seoTitleSuffix } from \"../../config\"\n\nconst StyledSection = styled.section`\n  width: 100%;\n  max-width: 62.5rem;\n  margin: 0 auto;\n  padding: 0 2.5rem;\n  height: auto;\n  background: ${({ theme }) => theme.colors.background};\n  h1 {\n    font-size: 1.5rem;\n  }\n  h2 {\n    font-size: 1.25rem;\n  }\n  h3 {\n    font-size: 1rem;\n    margin-bottom: 1rem;\n  }\n`\n\nconst StyledContentWrapper = styled(ContentWrapper)`\n  && {\n    width: 100%;\n    max-width: 36rem;\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n`\n\nconst Imprint = ({ data }) => {\n  const { body, frontmatter } = data.imprint.edges[0].node\n  const { title, seoTitle, useSeoTitleSuffix, useSplashScreen } = frontmatter\n\n  const globalState = {\n    isIntroDone: useSplashScreen ? false : true,\n    darkMode: false,\n  }\n\n  return (\n    <GlobalStateProvider initialState={globalState}>\n      <Layout>\n        <SEO\n          title={\n            useSeoTitleSuffix\n              ? `${seoTitle} - ${seoTitleSuffix}`\n              : `${seoTitle}`\n          }\n          meta={[{ name: \"robots\", content: \"noindex\" }]}\n        />\n        <StyledSection id={title}>\n          <StyledContentWrapper>\n            <h1 data-testid=\"heading\">{title}</h1>\n            <MDXRenderer>{body}</MDXRenderer>\n          </StyledContentWrapper>\n        </StyledSection>\n      </Layout>\n    </GlobalStateProvider>\n  )\n}\n\nImprint.propTypes = {\n  data: PropTypes.shape({\n    imprint: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            body: PropTypes.string.isRequired,\n            frontmatter: PropTypes.object.isRequired,\n          }).isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nexport default Imprint\n\nexport const pageQuery = graphql`\n  {\n    imprint: allMdx(filter: { fileAbsolutePath: { regex: \"/imprint/\" } }) {\n      edges {\n        node {\n          body\n          frontmatter {\n            title\n            seoTitle\n            useSeoTitleSuffix\n            useSplashScreen\n          }\n        }\n      }\n    }\n  }\n`\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}